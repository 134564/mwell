#=================================#
#[0x0000 ~ 0x2000) : 引擎         #
#[0x2000 ~ 0x3000) : GUI          #
#[0x3000 ~ 0x4000) : 保留         #
#[0x4000 ~ 0x5000) ：任务         #
#[0x5000 ~ 0x7000) : 实体项目     #
#[0x7000 ~ 0x7FFF) : 保留         #
#=================================#

#Range: 0x5200 ~ 0x52FF 此区间为GameSprite使用，请勿重复使用及修改。

# 
0x5000=void AddSpriteToWorld(Object spriteProc)

#
0x5001=void setSpriteFly(GameSprite spriteProc, boolean fly)

#
0x5002=void createGameView()

#
0x5003=boolean IsFly(Object gameSprite)

#
0x5004=GameNpc createNpc(int type, int id, int instanceId, int imageId)

#
0x5005=GamePet createPet(int id, String name)

#
0x5006=Vector getAllEnemy()

#
0x5007=Vector getTeam()

#
0x5008=void setBattleState(byte state)

#
0x5009=void makeBattleBG()

#
0x500A=void restoreView()

#
0x500B=void SetServerBattle(boolean isServerBattle)

#
0x500C=boolean IsServerBattle()

# //挂载BattleUI vm
0x500F=void MountBattleUIVM(String battleUIId)

#
0x5011=Object ResGetSpecialAnimatePlayer2(int specialIndex, int index, int playerType, int callbackIndex, Object callbackObject, Object callbackData, int tick)

#
0x5012=Object GetKeyMaker()

#
0x5013=int GetNextKey(Object keyMaker)

#
0x5016=int GetAnimateCount(Object proc)

#
0x5017=int GetMoveState(Object proc)

#
0x5018=void SetMoveState(Object proc, int moveState)

#
0x5019=Object GetCurrentAnimatePlayer(Object proc)

#
0x501A=Object GetAnimatePlayerCopy(Object AnimatePlayer)

#
0x501C=void drawSpriteBodyFrame(Object g, Object proc, int imgIdx, int frameIdx, int x, int y, int trans, int anchor)

#
0x501D=void SetBattling(boolean battling)


#
0x5070=Object vm_role_get_target()

#
0x5071=int vm_role_get_target_type()

#
0x5072=int vm_role_get_target_id()

#
0x5073=String vm_role_get_target_name()

#
0x5074=int vm_role_get_target_instanceid()

#
0x5075=String vm_role_get_target_x()

#
0x5076=String vm_role_get_target_y()

#
0x507D=void vm_role_set_auto_select(boolean _autoSelect)

#
0x5079=void vm_set_game_role_change_2468_mode(boolean yesorno)

#
0x507A=int vm_role_get_target_faction()

#
0x507B=int vm_role_dead()

#
0x507C=int vm_role_target_dead()

#
0x507F=int[] vm_get_gameview_x_y()

#
0x5080=void vm_game_role_set_battle_mode(boolean _inBattle)

#
0x5081=void vm_role_clear_target()

#
0x5082=void vm_game_role_set_target(int _instanceId)

#
0x5083=void vm_game_role_set_select_const(int enemyNpcAutoDist, int allyNpcAutoDist, int enemyPlayerAutoDist, int allyPlayerAutoDist, int teamerAutoDist, int enemyNpcForceDist, int allyNpcForceDist, int enemyPlayerForceDist, int allyPlayerForceDist, int teamerForceDist)

#
0x5084=void vm_role_test_and_change_target(int enemyInstanceId)

#
0x5085=void vm_game_role_point_move(int pointMoveDir)

#
0x5086=String vm_game_npc_get_animate_name(Object _processor)

#
0x5087=void vm_game_set_npc_image_id(Object _processor, int _imageId)

#
0x5088=void vm_game_set_npc_quest_id(Object _processor, int _questId)

#
0x5089=int vm_game_get_npc_quest_id(Object _processor)

#
0x508A=int vm_game_npc_get_animate_count(Object _processor)

#
0x508B=void vm_game_npc_set_need_collision(Object _processor, boolean _needCollision)

#
0x508C=void setAnimateName(Object proc, String cntName)

#
0x508D=void vm_free_icon(Object icon)

#
0x508E=void vm_set_icon_position(Object icon, int x, int y)

#
0x508F=void vm_set_icon_clip(Object icon, int x, int y, int w, int h)

#
0x5090=void vm_set_icon_show(Object icon, boolean show)

#
0x5091=void vm_set_icon_index(Object icon, int index)

#
0x5092=void vm_set_icon_play_animate(Object icon, boolean playAnimate)

#
0x5093=int vm_get_icon_id(Object icon)

#
0x5094=Object vm_get_icon_father(Object icon)

#
0x5095=void vm_game_to_map(int _mapId, int _mapInstanceId, int _x, int _y)

#
0x5096=int vm_game_get_map_id()

#
0x50A0=void vm_game_set_netplayer_show_max_count(int maxCount)

# #创建一个netplayer, 目前用于角色列表中显示的动画
0x50A1=Object CreateNetPlayer(int id)

#
0x50A2=int GetRoleID()

#
0x50A3=String GetRoleName()

#
0x50A4=int GetRoleLevel()

#
0x50A5=void GC()

#
0x50A6=Object GetRoleProcessor()

#; see gtl struct GameRoleInfo
0x50A7=Object GetRoleInfo()

#;
0x50A8=Object GetProcessor(int type, int id)

#
0x50A9=void ResBattleRemind()

#
0x50AA=void ResSetTeamInfo(Hashtable teamInfo)

#
0x50B0=int[] Get_player_position()



#获取两个gamesprite的
0x50AB=int vm_game_get_dis(Object _gameSprite1, Object _gameSprite2)

0x50AC=int GetBattleId()

0x50AD=boolean GetBattling()

0x50AE=void SetGTLShow(String gtlName, boolean isShown)
0x50AF=boolean GetGTLShow(String gtlName)

0x50B2=boolean AP_PlayEnd(Object processor, int apKey)

#创建角色
0x50C5=Object CreateRole(int id, String name);

#加载动画 PipAnimateSet
0x50C6=Object LoadPipAnimateSet(String name);

0x50C7=void AddAnimatePlayer(GameSprite role, AnimatePlayer ap);

#获得一个精灵的动画集
0x50C8=Object[] Extapi_Gamesprite_GetAnimateSetList(Object gameSprite);

#创建 npc,怪物
0x50C9=Object CreateNpc(int id, int instanceId);

#创建网络玩家
0x50CA=Object CreateNetPlayer(int id);
#创建宠物 
0x50CB=Object CreatePet(int id, int instanceId);
#增加跟随
0x50CC=void SpriteAddFollower(Object owner, Object sprite);
#移除跟随
0x50Cd=void Sprite_remove_follower(Object owner, Object sprite);

#添加一个轨迹动画
0x5200=void add_a_track(pgc gc, int source_id, int target_id, short range, short height, short speed, short fade_time, short life_time, pimageset imagset);


#
0x5636=int game_panel_create_template()


#================================================================================================
#VM GameSprite接口
#Range: 0x5200 ~ 0x52FF
#Add by Chris
#================================================================================================

#获取设置动画所需的参数
0x5202=int[] gamesprite_get_animate_para(Object processor)

#取得精灵的阵营
#0x520A=int gamesprite_get_faction(Object processor)

#设置精灵的阵营
#0x520B=void gamesprite_set_faction(Object processor, int _faction)

#设置精灵死亡
0x5216=void gamesprite_set_die(Object processor, boolean _die)

#设置武器类型
#0x5223=void gamesprite_set_weapon_type(Object processor, int _weaponType)

#检测特殊状态
#0x5228=int gamesprite_test_status(Object processor, int _status)

#添加特殊状态
#0x5229=void gamesprite_add_status(Object processor, int _status)

#移除特殊状态
#0x522A=void gamesprite_remove_status(Object processor, int _status)

#清除特殊状态
#0x522B=void gamesprite_clear_status(Object processor)

#切换精灵的骑马状态
#0x5230=void gamesprite_set_horse(Object processor, boolean riding)

#设置精灵的小地图显示参数
#0x5234=void gamesprite_set_mini_map_color(Object processor, int[] miniMapColor)

#设置精灵是否在小地图上显示
#0x5235=void gamesprite_set_mini_map_show(Object processor, boolean show)

#精灵是否在小地图上显示
0x2536=void gamesprite_get_mini_map_show(Object processor)

#设置强制显示小地图
0x5237=gamesprite_force_mini_map_show(Object processor, boolean show)

#是否在小地图上强制显示
0x5238=gamesprite_get_force_mini_map_show(Object processor)

#minmap 开关函数
0x5286=void vm_set_mini_map_show(boolean show)

#minmap 获取当前状态函数
0x5287=void vm_sprite_get_mini_map_show(GameSprite processor)
#================================================================================================
#VM GameSprite接口 End
#Range: 0x5200 ~ 0x52FF
#Add by Chris
#================================================================================================

0x5636=int game_panel_create_template()

# 绘制gui边框，背景图片，边角图片
#Range: 0x5656 ~ 0x5676 预留32个接口函数

#绘制border
0x5656 = void Gui_setBorderLine(GWidget this, int[] colors, boolean fill)

#绘制背景图片
0x5657 = void Gui_setBackPic(GWidget this, int offX, int offY, ImageSet image, int index, boolean bCol, boolean bRow)

#绘制填充背景色
0x5658 = void Gui_setBackColor(GWidget this, int color)

#绘制四角图片
0x5659 = void Gui_setCornerPic(GWidget this, ImageSet image, int index)

#绘制多层背景图片
0x565A = void Gui_setBackPics(GWidget this, int[] offx, int[] offy, int[] w, int h, ImageSet image, int[] index, boolean bCol, boolean bRow)

#绘制获取焦点多色边框
0x565B = void Gui_setFocusBorderLine(GWidget this, int[] colors)

#创建backgroundPaint对象
0x565C = void Gui_makeBackXuanYuanBkg(GWidget this)

#绘制边框的图片,只可绘制上下边框图片,mask标志绘制朝向
0x565D = void Gui_setBorderPic(GWidget this, int[] offX, int[] offY, ImageSet image, int[] index, int mask)

#是否绘制边框
0x565E = void Gui_setBorderPainted(GWidget this, boolean borderPainted)
#是否绘制背景色
0x5660 = void Gui_setBackPainted(GWidget this, boolean backPainted)
#是否绘制焦点边框
0x5661 = void Gui_setFocusPainted(GWidget this, boolean focusPainted)

#是否绘制topcorner
0x5662 = void Gui_IsDrawTopCorner(GWidget this, boolean isDrawTopCorner)

#绘制指定区域的背景区域
0x5663 = void Gui_drawPointBkg(GWidget this, int[] pos, int color)

#是否绘制指定区域的背景色
0x5664 = void Gui_IsDrawPointBkg(GWidget this, boolean IsDrawPointBkg)

#设置背景色
0x5665 = void Gui_setBkgColor(GWidget this, int color)

#设置cornerimage绘制偏移量
0x5666 = void Gui_setCornerImageOffSet(GWidget this, int offx, int offy)

#设置获取焦点背景色
0x5667 = void Gui_setFocusBackColor(GWidget this, int color)
#设置蒙版背景色
0x5668 = void Gui_setModeBkgColor(GWidget this, int color)