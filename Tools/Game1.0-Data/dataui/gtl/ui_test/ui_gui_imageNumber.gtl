VERSION 3;
ID 0;
ATTRIBUTE 128;
NAME "ui_gui_imagenumber";
DESCRIPTION "imagenumber测试界面"; 

#include "../core/gui/guiInclude.h"

DATA
{
	GVMCanvasUnit vmCU;
	GContainer container;
	GImageNumber imageNumber;	
	ImageSet numberRes;
}

FUNCTION init()
{
	numberRes = Realize(ImageSet_Create("number240.pip", TRUE));
	// 创建canvasUnit以及一个container.
	create_canvasUnit();
	
	// 创建一个label
	test_imageNumber();
}

FUNCTION cycle()
{
}

FUNCTION cycleUI()
{
}

FUNCTION paint()
{
}

FUNCTION destroy()
{
	free vmCU;
	free container;
	free imageNumber;
	free numberRes;
}

FUNCTION processPacket()
{
	return FALSE;
}

FUNCTION event()
{
}

FUNCTION create_canvasUnit()
{
	// 创建一个canvasUnit, 它是脚本界面的最基本组织形式, 每个界面window必须
	// 有一个canvasUnit.
	String cuName = Realize(Object_Create("Canvas_Unit"));
	vmCU = Realize(GVMCU_MakeGVMCU(NULL,cuName));
	// 创建一个container.
	String containerName = Realize(Object_Create("Container"));
	container = Realize(GC_makeGContainer(NULL,containerName));
	free cuName;
	free containerName;
	
	GW_setBound(vmCU, 0, 0, 240, 320);
	GW_setBound(container, 0, 0, 240, 320);
	GC_addChildWidget(vmCU, container, 0);
	
	container.backgroundColor = 0xe9daaf;			//设置container的背景色
	container.isBackgroundPainted = TRUE;
	Gui_GW_RequestFocus(container);
	container.func_handleKey = click_handle;
}

/*
 *imageNumber可以根据指定的图片资源和起始图片的index显示数字和符合的图形
 *通过GIN_setImageNumber(GImageNumber this, String number)设置初始显示图形
 *图形资源为空或初始字符为空画X
 */
FUNCTION test_imageNumber()
{
	String imageNumberName = Realize(Object_Create("labelName"));					//imageNumber的名字
	String number = Realize(Object_Create("1234567890+-"));							//imageNumber初始显示的字符串
	imageNumber = Realize(GIN_makeGImageNumber(NULL,imageNumberName, numberRes, 165));
	GIN_setImageNumber(imageNumber, number);										//设置imageNumber初始显示的字符串
	
	GC_addChildWidget(container, imageNumber, 0);									//将imageNumber加入container
	GW_setBound(imageNumber, 50, 50, 110, 50);										//设置imageNumber的坐标宽高
	
	free imageNumberName;
	free number;
	
//	imageNumber.plusStartIndex = 30;
//	imageNumber.subStartIndex = 44;
	imageNumber.borderColor = 0xff0000;												//设置imageNumber边框
	imageNumber.isBorderPainted = TRUE;
	GW_setBorderSize(imageNumber, 2, 2, 2, 2);
	GW_setInsetSize(imageNumber, 2, 2, 2, 2);
	
}

FUNCTION click_handle(GWidget this, int eventType, int keyCode, int modifierCode)
{
	boolean eventComsumed = FALSE;
	
	if (eventType == EVENT_TYPE_KEYRELEASED && keyCode == SOFT_LAST_PRESSED)
	{
		CloseUI();
		int textboxToMain = OpenUI("ui_gui_main");
		eventComsumed = TRUE;
	}
	return eventComsumed;
}


